---
title: "Description des données Alonge"
author: "Aurélien"
format: html
---

```{r setup}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(readxl)
library(ggplot2)
```


# Données Littoral Normand

```{r path-data-littoral-normand}
#| echo: false
path_to_data <- "data/"
```

## Evènements sanitaires

Chargement des évènements sanitaires.

```{r loading-health-recrords-data}
#| echo: false
path_to_file <- paste0(path_to_data, "20240216_bdd évènements sanitaires.xlsx")

san <- read_excel(path_to_file) |> 
  rename(dep = "Num Dép",
         herd_id = "Num Cheptel",
         anim_id = "Num National",
         lac_id = "Num Lactation",
         calv_date = "Date Début Lactation",
         event_date = "Date Sanitaire",
         LISA_code = "Code LISA",
         disease = "Nom Pathologie",
         LISA_alt = "Code Alternatif LISA",
         disease_cat = "CatégoriePathologie",
         anim_cat = "CatégorieAnimaux"
         ) |> 
  mutate(
    calv_date = as.Date(calv_date),
    event_date = as.Date(event_date)
  )

```

Ce jeu de données contient :

- Nombre d'élevages : `r length(unique(san$herd_id))`
- Nombre d'animaux : `r length(unique(san$anim_id))`
- Nombre de lactation : `r length(unique(san$lac_id))`


Le jeu de données contient les évènements sanitaires survenus entre début 2021 et début 2024.

```{r san-event-dates-summary}
summary(san$event_date)
```


```{r san-event-dates-dist}
san |> 
  # filter(calv_date > "2018-12-31") |> 
  ggplot(aes(x = event_date)) +
  geom_histogram()
```

La majorité des vaches incluses ont des dates de vêlage entre 2019 et 2024.


```{r san-calv-dates-summary}
summary(san$calv_date)
```


```{r san-calv-dates-dist}
san |> 
  filter(calv_date > "2018-12-31") |> 
  ggplot(aes(x = calv_date)) +
  geom_histogram()
```

Ci-dessous la distribution des fréquences de évènements enregistrés.

```{r}
san |> 
  select(disease) |> 
  table() |> 
  as_tibble() |> 
  arrange(desc(n)) |>
  mutate(disease = fct_reorder(disease, desc(n))) |> 
  filter(row_number()  > 0 & row_number()  < 50) |> 
  ggplot(aes(x = disease, y = n)) +
  geom_bar(stat = "identity") +
  theme(axis.text.x=element_text(angle=90, hjust = 1)) +
  xlab("")
```

## Données mammites

```{r}

```


## Données parage

```{r}

```


# Données Idele : 


Les données transmises par Philippe contiennent 11 fichiers.

On commence par appeler les données une a une et le tri se fera ensuite. 

## Format des données

Le fichier Format_données.csv contient un descriptif des différents jeux de données.

```{r data-desc-chargment}
path_to_file <- paste0(path_to_data, "Format_données.xlsx")

data_desc <- read_excel(path_to_file)
print(data_desc)
```

## Liste des animaux

```{r ls-anim-chargment}
path_to_file <- paste0(path_to_data, "list_anim.txt")

ls_anim <- read.csv2(path_to_file)

glimpse(ls_anim)
```
## Liste des élevages

```{r ls-elv-chargment}
path_to_file <- paste0(path_to_data, "list_elev.txt")

ls_elv <- read.csv2(path_to_file)

glimpse(ls_elv)
```


## Conditions naissances

Le fichier s'appelle `condition_naiss.txt`. Il contient des informations sur des bovins, notamment des années et conditions de naissance.


```{r conditions-naiss-chargement}
path_to_file <- paste0(path_to_data, "condition_naiss.txt")

cnais <- read.csv2(path_to_file)

colnames(cnais) <- tolower(colnames(cnais))

glimpse(cnais)
```

`RV` semble contenir des rangs de vêlage.

```{r cnais-rang-velage}
#| equal : false
#barplot(table(cnais$RV))
```


Les codes et effectifs pour les conditions de naissance :

```{r cnais-conditions-naissance}
table(cnais$CN)
```
Les poids de naissance sont renseignés pour `r round(length(cnais$PONAIS[!is.na(cnais$PONAIS)]) / nrow(cnais) * 100, 1)`% des animaux Cela me semble très élevé.


```{r cnais-ditrib-poids-naiss}
#hist(cnais$PONAIS)
```

## Contrôles laitiers

Le fichier est assez volumineux (241 Mo). Données classiques.

```{r controles-elementaires}
path_to_file <- paste0(path_to_data, "controle_elem.txt")

rec <- read.csv2(path_to_file)

colnames(rec) <- tolower(colnames(rec))

#modification du nom des colonnes pour simplifier
rec <- rec |> 
  rename(anim_id = anim,
         parity = nulact,
         ctrl_date = dapaul,
         dure_lac = dulact,
         scc = colelc,
         milk = lai24h,
         prot = tplaco,
         fat = tblaco)

#conversion de la PL en kg 
rec <- rec |> 
  mutate(milk = milk/10)

glimpse(rec)
```

Il contient de données pour `r nrow(rec)` contrôles élemntaires sur `r  length(unique(rec$ANIM))` vaches. On remonte assez loin en termes de dates de contrôles.

```{r rec-distrib-dates}
rec |> 
  mutate(ctrl_date = as.Date(ctrl_date)) |> 
  ggplot(aes(x = ctrl_date)) +
  geom_histogram()
```

## Produtcion

Ce fichier contient moins de lignes et plus de colonnes que le précédent. Je ne comprends pas bien la différence.

```{r prd-chargment}
path_to_file <- paste0(path_to_data, "production.txt")

prd <- read.csv2(path_to_file)

colnames(prd) <- tolower(colnames(prd))

#modification du nom des colonnes pour simplifier
prd <- prd |> 
  rename(parity = nulact,
         anim_id = anim,
         calv_date = dadela,
         total_milk  = latolad,
         total_MG = mgtolad,
         total_MP = mptolad,
         total_tb = tbtolad,
         total_tp = tptolad)
         

glimpse(prd)
```

## Inséminations artificielles

```{r ia-chargment}
path_to_file <- paste0(path_to_data, "extra_femia_20240415.csv")

ia <- read.csv(path_to_file)

colnames(ia) <- tolower(colnames(ia))

ia <- ia |> 
  rename(anim_id = anim,
         date_ia = dainar,
         prev_calv = dafigep,
         nxt_calv = dafiges,
         num_ia = rangia,
         prev_parity = ravelap,
         nxt_parity = ravelas)

glimpse(ia)
```
## Généalogie

```{r genea-chargment}
path_to_file <- paste0(path_to_data, "genea.txt")

gna <- read.csv2(path_to_file)

colnames(gna) <- tolower(colnames(gna))

glimpse(gna)
```


## Index

```{r index-chargment}
path_to_file <- paste0(path_to_data, "index.txt")

indx <- read.csv2(path_to_file)

colnames(indx) <- tolower(colnames(indx))

glimpse(indx)
```

## Mammites

```{r mamt-chargment}
path_to_file <- paste0(path_to_data, "mammites.txt")

mamt <- read.csv2(path_to_file)

colnames(mamt)<-tolower(colnames(mamt))

glimpse(mamt)
```
- Code origine mammite

Il y a 3 codes mamites différents. Pas de description.

```{r code-mammite-desc}
mamt |> 
  select(coorco) |> 
  table()
```
- Sévérité mammites

```{r mammite-severite}
mamt |> 
  select(semacl) |> 
  table()
```
- Combinaison code - sévérité mammite

Mammites de code C globalement moins sévères.

```{r mammite-severité-code}
mamt |> 
  select(coorco, semacl) |> 
  table() |> 
  apply(1, function(x) round(x / sum(x), 3))
```
- Dates des mammites

```{r mamites-dsitribution-dates}
mamt |> 
  mutate(damacl = as.Date(damacl)) |> 
  ggplot(aes(x = damacl)) +
  geom_histogram()
```


## Mouvements

```{r mvt-chargment}
path_to_file <- paste0(path_to_data, "mvt.txt")

mvt <- read.csv2(path_to_file)

colnames(mvt) <- tolower(colnames(mvt))

mvt <- mvt |> 
  rename(anim_id = anim)

glimpse(mvt)
```


# Ajout du numéro de cheptel a chaque vache dans les données du contrôle laitier 

fait dans "rec_selection.qmd", il suffit de charger le fichier de données généré par le code. 

```{r Chargement du fichier "rec_final"}

rec_final <- read.csv2("generated_datasets/rec_final.csv")

#rec_final <- read.csv2(here :: here("data/rec_final.csv"), header = TRUE, sep = ";", dec=",", fileEncoding = "Latin1")

rec_final <- rec_final |> 
  rename(ctrl_date = rec_date)

rec_final <- rec_final |> 
  mutate(ctrl_date = as.Date(ctrl_date))
```

Génération d'une liste d'élevages uniques.

```{r}
herd_list <- unique(rec_final$herd_id)
```

On sélectionne un échantillon de 10 élevages au hasard.

```{r Sélection d'un échantillon de 10 élevages}
set.seed(42) #On garde la même graine si on veut conserver le même échantillon
herd_random_sample <- sample(herd_list, 10, replace = FALSE)
rec_final <- rec_final |> 
  filter(herd_id %in% herd_random_sample)
```

# modifications et tri des tableaux de données 

Rajout des dates de vêlage au tableau rec_final afin de calculer le stade de lactation "dim"

```{r}
rec_final <- inner_join(rec_final,
                  prd |> 
                    select(anim_id, parity, calv_date),
                  join_by(anim_id, parity))
 
```

```{r}
rec_final <- rec_final |> 
  mutate(calv_date = as.Date(calv_date), ctrl_date = as.Date(ctrl_date))


rec_final <- rec_final |> 
  mutate(dim = as.integer(ctrl_date - calv_date))

rec_final <- rec_final |> 
  mutate(herd_id = as.character(herd_id))
```


# Création d'une liste de lactations 

Ce tableau permet de regrouper toutes les infos de cellules et de production laitière par lactation 

```{r - lac-list of lactations}
lac <- rec_final |> 
  group_by(herd_id, anim_id,calv_date) |> 
  summarize(parity = unique(parity),
            lac_id = NA,
            n_ctrl = length(unique(ctrl_date)),
            n_scc_high = length(scc[scc > 200]),
            n_scc_early = length(scc[dim < 91]),
            n_scc_early_high = length(scc[scc > 200 & dim < 91]),
            n_scc_late_high = length(scc[scc > 200 & dim > 91]),
            early_milk = mean((milk[dim < 91]))) 
  
lac$lac_id <- 1:nrow(lac)

```

```{r estimation de la date du prochain vêlage}
lac <- lac |> 
  group_by(anim_id) |> 
  mutate(calv_nxt = lead(calv_date))
```


Création d'une variable semblble à la période d'insémination correspondant à 90 jours après la date de vêlage

```{r création de la variable "période insémination"}
lac <- lac |> 
  mutate(per_ins = calv_date + 90)
```


```{r date du premier vêlage}
calv_first <- min(lac$calv_date, na.rm  = TRUE)
calv_first <- as.Date(calv_first)
```

## ajout des données de reproduction

```{r conversion des dates}
ia <- ia |> 
  mutate(date_ia = as.Date(date_ia, "%d/%m/%Y"), 
         prev_calv = as.Date(prev_calv, "%d/%m/%Y"), 
         nxt_calv = as.Date(nxt_calv, "%d/%m/%Y"))

#séléction des dates d'ia supérieurs au premier vêlage 
ia <- ia |> 
  filter(date_ia > calv_first)
```


```{r sélection des dates d'ia comprises entre le vêlage précédent et le vêlage suivant, pour un même animal et pour une même lactation il y a plusieurs dates d'ia car elle a été inséminée plusieurs fois. }
 
ai1 <- left_join(lac |> 
                   select(anim_id, lac_id, calv_date, calv_nxt), 
                 ia |> 
                   select(anim_id, date_ia),
                 join_by(anim_id)) |> 
           filter(date_ia > calv_date & (date_ia < calv_nxt | is.na(calv_nxt))) |> 
  select(anim_id, lac_id, calv_date, calv_nxt, date_ia)
```
Les lignes qui se rajoutent correspondent aux animaux qui ont plusieurs dates d'ia pour une même lactation


```{r}
ai_lac <- ai1 |> 
  arrange(lac_id, date_ia) |> 
  group_by(lac_id) |> 
  summarise(ai_N = length(unique(date_ia)),
            ai_first = min(date_ia),
            ai_last = max(date_ia),
            ai_calv_days = as.integer(unique(calv_nxt) - max(date_ia)))
```


```{r ajout des données de reproduction à lac}
lac <- left_join(lac, ai_lac)
```

On va maintenant ajouter des variables binaires permettant de caractériser la décision ou non de mise à la repro

```{r miserepro-early_mamchro-definition}
lac <- lac |> 
  mutate(miserepro = ifelse(ai_N == 0 | is.na(ai_N), 0, 1))

```


```{r Enregistrement de "lac"}
write.csv2(lac, "generated_datasets/lac.csv")
```


Le but est d'utiliser lac pour travailler les régressions logistiques 


tableau "lac_corr" qui ne sélectionne que les animaux qui ont plus de 9 contrôles ainsi que les animaux qui ont vêler après le 1 janvier 2015. 


```{r création d'un sous-groupe de lac}
lac_corr = lac[lac$n_ctrl > 9 & lac$calv_date >as.Date("2015-01-01"),]

```


# Recherche des génisses par troupeau 

## création d'un premier tableau qui regroupe toutes les primipares 

```{r tableau prim}
prim <- ia |> 
  group_by(anim_id) |> 
  filter(prev_parity == 0 & iafok == 1) |> 
  select(anim_id, date_ia, chepia, nxt_calv, prev_parity, iafok)

prim <- prim |> 
  rename(herd_id = chepia)
```


(Ajout d'une colonne pour les mois et l'année) --> pas utilisé pour l'instant  

```{r}
#prim <- prim |> 
 # mutate(m_y_génisse = format(date_ia, format = "%Y/%m"))
```



Attention dans le jeu de données "ia", une vache peut passer de la parité 0 à la parité 3 => il ne faut pas se fier à "nxt_parity". 

Maintenant il faut calculer le nombre de primipares mises à la repro, présentes dans le troupeau pour chaque lactation  de vache. 



```{r}
nb_prim <- prim |> 
  group_by(herd_id, date_ia) |> 
  summarize(n_prim = length(date_ia)) |> 
  arrange(herd_id)
```


